<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:security="http://www.springframework.org/schema/security"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd">

	<context:component-scan base-package="ba.pehli.cinema.service" />

	<jdbc:embedded-database id="dataSource" type="H2">
		<jdbc:script location="classpath:database/database.sql" />
	</jdbc:embedded-database>

	<bean id="h2Server" class="org.h2.tools.Server" factory-method="createTcpServer"
		init-method="start" destroy-method="stop" depends-on="h2WebServer">
		<constructor-arg value="-tcp,-tcpAllowOthers,-tcpPort,9092" />
	</bean>
	<bean id="h2WebServer" class="org.h2.tools.Server" factory-method="createWebServer"
		init-method="start" destroy-method="stop">
		<constructor-arg value="-web,-webAllowOthers,-webPort,8082" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="ba.pehli.hello.domain,ba.pehli.cinema.domain" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.H2Dialect
				</prop>
				<prop key="hibernate.max_fetch_depth">3</prop>
				<prop key="hibernate.jdbc.fetch_size">50</prop>
				<prop key="hibernate.jdbc.batch_size">10</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<tx:annotation-driven />

	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames" value="WEB-INF/i18n/application" />
		<property name="fallbackToSystemLocale" value="false" />
	</bean>

	<bean id="customEditorConfigurer"
		class="org.springframework.beans.factory.config.CustomEditorConfigurer">
		<property name="propertyEditorRegistrars">
			<list>
				<bean class="ba.pehli.cinema.utils.CustomPropertyEditorRegistrar" />
			</list>
		</property>
	</bean>

	<security:global-method-security
		pre-post-annotations="enabled" />
	<security:http use-expressions="true">
		<security:intercept-url pattern="/*" access="permitAll" />
		<security:form-login login-page="/movies"
			authentication-failure-url="/users/loginfail" default-target-url="/movies" />
		<security:logout logout-success-url="/movies" />
	</security:http>

	<security:authentication-manager>
		<security:authentication-provider>
			<security:jdbc-user-service
				data-source-ref="dataSource"
				users-by-username-query="select username,password,enabled from users where username=?"
				authorities-by-username-query="select username,role as authorities from users where username=?" />
		</security:authentication-provider>
	</security:authentication-manager>

	<task:scheduler id="scheduler" pool-size="10" />
	<task:scheduled-tasks scheduler="scheduler">
		<task:scheduled ref="userDao" method="deleteNonVerifiedUsers"
			initial-delay="3600000" fixed-delay="3600000" />
	</task:scheduled-tasks>
</beans>
